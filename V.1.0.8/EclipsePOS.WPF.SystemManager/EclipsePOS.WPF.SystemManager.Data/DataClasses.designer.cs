#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3615
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EclipsePOS.WPF.SystemManager.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="possite")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertsub(sub instance);
    partial void Updatesub(sub instance);
    partial void Deletesub(sub instance);
    partial void Insertpos_key(pos_key instance);
    partial void Updatepos_key(pos_key instance);
    partial void Deletepos_key(pos_key instance);
    partial void Insertorganization(organization instance);
    partial void Updateorganization(organization instance);
    partial void Deleteorganization(organization instance);
    partial void Insertpos_param(pos_param instance);
    partial void Updatepos_param(pos_param instance);
    partial void Deletepos_param(pos_param instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::EclipsePOS.WPF.SystemManager.Data.Properties.Settings.Default.possiteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<sub> subs
		{
			get
			{
				return this.GetTable<sub>();
			}
		}
		
		public System.Data.Linq.Table<help> helps
		{
			get
			{
				return this.GetTable<help>();
			}
		}
		
		public System.Data.Linq.Table<tran> trans
		{
			get
			{
				return this.GetTable<tran>();
			}
		}
		
		public System.Data.Linq.Table<trans_item> trans_items
		{
			get
			{
				return this.GetTable<trans_item>();
			}
		}
		
		public System.Data.Linq.Table<pos_key> pos_keys
		{
			get
			{
				return this.GetTable<pos_key>();
			}
		}
		
		public System.Data.Linq.Table<organization> organizations
		{
			get
			{
				return this.GetTable<organization>();
			}
		}
		
		public System.Data.Linq.Table<pos_param> pos_params
		{
			get
			{
				return this.GetTable<pos_param>();
			}
		}
	}
	
	[Table(Name="dbo.sub")]
	public partial class sub : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _subscriber_id;
		
		private string _subscriber_name;
		
		private string _subscriber_pass;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onsubscriber_idChanging(int value);
    partial void Onsubscriber_idChanged();
    partial void Onsubscriber_nameChanging(string value);
    partial void Onsubscriber_nameChanged();
    partial void Onsubscriber_passChanging(string value);
    partial void Onsubscriber_passChanged();
    #endregion
		
		public sub()
		{
			OnCreated();
		}
		
		[Column(Storage="_subscriber_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int subscriber_id
		{
			get
			{
				return this._subscriber_id;
			}
			set
			{
				if ((this._subscriber_id != value))
				{
					this.Onsubscriber_idChanging(value);
					this.SendPropertyChanging();
					this._subscriber_id = value;
					this.SendPropertyChanged("subscriber_id");
					this.Onsubscriber_idChanged();
				}
			}
		}
		
		[Column(Storage="_subscriber_name", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string subscriber_name
		{
			get
			{
				return this._subscriber_name;
			}
			set
			{
				if ((this._subscriber_name != value))
				{
					this.Onsubscriber_nameChanging(value);
					this.SendPropertyChanging();
					this._subscriber_name = value;
					this.SendPropertyChanged("subscriber_name");
					this.Onsubscriber_nameChanged();
				}
			}
		}
		
		[Column(Storage="_subscriber_pass", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string subscriber_pass
		{
			get
			{
				return this._subscriber_pass;
			}
			set
			{
				if ((this._subscriber_pass != value))
				{
					this.Onsubscriber_passChanging(value);
					this.SendPropertyChanging();
					this._subscriber_pass = value;
					this.SendPropertyChanged("subscriber_pass");
					this.Onsubscriber_passChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.help")]
	public partial class help
	{
		
		private System.Nullable<int> _help_id;
		
		private string _display_name;
		
		private string _display_text;
		
		public help()
		{
		}
		
		[Column(Storage="_help_id", DbType="Int")]
		public System.Nullable<int> help_id
		{
			get
			{
				return this._help_id;
			}
			set
			{
				if ((this._help_id != value))
				{
					this._help_id = value;
				}
			}
		}
		
		[Column(Storage="_display_name", DbType="VarChar(50)")]
		public string display_name
		{
			get
			{
				return this._display_name;
			}
			set
			{
				if ((this._display_name != value))
				{
					this._display_name = value;
				}
			}
		}
		
		[Column(Storage="_display_text", DbType="VarChar(256)")]
		public string display_text
		{
			get
			{
				return this._display_text;
			}
			set
			{
				if ((this._display_text != value))
				{
					this._display_text = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.trans")]
	public partial class tran
	{
		
		private System.Nullable<int> _trans_id;
		
		private System.Nullable<int> _trans_no;
		
		private System.Nullable<int> _site_no;
		
		private System.Nullable<int> _pos_no;
		
		private System.Nullable<int> _drawer_no;
		
		private System.Nullable<int> _config_no;
		
		private System.Nullable<int> _trans_type;
		
		private System.Nullable<int> _state;
		
		private System.Nullable<int> _reason_code;
		
		private string _customer_no;
		
		private System.Nullable<System.DateTime> _start_time;
		
		private System.Nullable<System.DateTime> _complete_time;
		
		private System.Nullable<int> _emp_no;
		
		private System.Nullable<int> _carry_out;
		
		private System.Nullable<int> _training_mode;
		
		private string _locale_language;
		
		private string _locale_country;
		
		private string _locale_variant;
		
		private System.Nullable<int> _archive_date;
		
		private System.Nullable<int> _upload_date;
		
		private System.Nullable<int> _replication_date;
		
		public tran()
		{
		}
		
		[Column(Storage="_trans_id", DbType="Int")]
		public System.Nullable<int> trans_id
		{
			get
			{
				return this._trans_id;
			}
			set
			{
				if ((this._trans_id != value))
				{
					this._trans_id = value;
				}
			}
		}
		
		[Column(Storage="_trans_no", DbType="Int")]
		public System.Nullable<int> trans_no
		{
			get
			{
				return this._trans_no;
			}
			set
			{
				if ((this._trans_no != value))
				{
					this._trans_no = value;
				}
			}
		}
		
		[Column(Storage="_site_no", DbType="Int")]
		public System.Nullable<int> site_no
		{
			get
			{
				return this._site_no;
			}
			set
			{
				if ((this._site_no != value))
				{
					this._site_no = value;
				}
			}
		}
		
		[Column(Storage="_pos_no", DbType="Int")]
		public System.Nullable<int> pos_no
		{
			get
			{
				return this._pos_no;
			}
			set
			{
				if ((this._pos_no != value))
				{
					this._pos_no = value;
				}
			}
		}
		
		[Column(Storage="_drawer_no", DbType="Int")]
		public System.Nullable<int> drawer_no
		{
			get
			{
				return this._drawer_no;
			}
			set
			{
				if ((this._drawer_no != value))
				{
					this._drawer_no = value;
				}
			}
		}
		
		[Column(Storage="_config_no", DbType="Int")]
		public System.Nullable<int> config_no
		{
			get
			{
				return this._config_no;
			}
			set
			{
				if ((this._config_no != value))
				{
					this._config_no = value;
				}
			}
		}
		
		[Column(Storage="_trans_type", DbType="Int")]
		public System.Nullable<int> trans_type
		{
			get
			{
				return this._trans_type;
			}
			set
			{
				if ((this._trans_type != value))
				{
					this._trans_type = value;
				}
			}
		}
		
		[Column(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Storage="_reason_code", DbType="Int")]
		public System.Nullable<int> reason_code
		{
			get
			{
				return this._reason_code;
			}
			set
			{
				if ((this._reason_code != value))
				{
					this._reason_code = value;
				}
			}
		}
		
		[Column(Storage="_customer_no", DbType="VarChar(20)")]
		public string customer_no
		{
			get
			{
				return this._customer_no;
			}
			set
			{
				if ((this._customer_no != value))
				{
					this._customer_no = value;
				}
			}
		}
		
		[Column(Storage="_start_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> start_time
		{
			get
			{
				return this._start_time;
			}
			set
			{
				if ((this._start_time != value))
				{
					this._start_time = value;
				}
			}
		}
		
		[Column(Storage="_complete_time", DbType="DateTime")]
		public System.Nullable<System.DateTime> complete_time
		{
			get
			{
				return this._complete_time;
			}
			set
			{
				if ((this._complete_time != value))
				{
					this._complete_time = value;
				}
			}
		}
		
		[Column(Storage="_emp_no", DbType="Int")]
		public System.Nullable<int> emp_no
		{
			get
			{
				return this._emp_no;
			}
			set
			{
				if ((this._emp_no != value))
				{
					this._emp_no = value;
				}
			}
		}
		
		[Column(Storage="_carry_out", DbType="Int")]
		public System.Nullable<int> carry_out
		{
			get
			{
				return this._carry_out;
			}
			set
			{
				if ((this._carry_out != value))
				{
					this._carry_out = value;
				}
			}
		}
		
		[Column(Storage="_training_mode", DbType="Int")]
		public System.Nullable<int> training_mode
		{
			get
			{
				return this._training_mode;
			}
			set
			{
				if ((this._training_mode != value))
				{
					this._training_mode = value;
				}
			}
		}
		
		[Column(Storage="_locale_language", DbType="VarChar(2)")]
		public string locale_language
		{
			get
			{
				return this._locale_language;
			}
			set
			{
				if ((this._locale_language != value))
				{
					this._locale_language = value;
				}
			}
		}
		
		[Column(Storage="_locale_country", DbType="VarChar(2)")]
		public string locale_country
		{
			get
			{
				return this._locale_country;
			}
			set
			{
				if ((this._locale_country != value))
				{
					this._locale_country = value;
				}
			}
		}
		
		[Column(Storage="_locale_variant", DbType="VarChar(8)")]
		public string locale_variant
		{
			get
			{
				return this._locale_variant;
			}
			set
			{
				if ((this._locale_variant != value))
				{
					this._locale_variant = value;
				}
			}
		}
		
		[Column(Storage="_archive_date", DbType="Int")]
		public System.Nullable<int> archive_date
		{
			get
			{
				return this._archive_date;
			}
			set
			{
				if ((this._archive_date != value))
				{
					this._archive_date = value;
				}
			}
		}
		
		[Column(Storage="_upload_date", DbType="Int")]
		public System.Nullable<int> upload_date
		{
			get
			{
				return this._upload_date;
			}
			set
			{
				if ((this._upload_date != value))
				{
					this._upload_date = value;
				}
			}
		}
		
		[Column(Storage="_replication_date", DbType="Int")]
		public System.Nullable<int> replication_date
		{
			get
			{
				return this._replication_date;
			}
			set
			{
				if ((this._replication_date != value))
				{
					this._replication_date = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.trans_item")]
	public partial class trans_item
	{
		
		private int _trans_id;
		
		private System.Nullable<int> _seq_no;
		
		private string _sku;
		
		private string _sku_link;
		
		private System.Nullable<double> _quantity;
		
		private System.Nullable<double> _amount;
		
		private System.Nullable<double> _ext_amount;
		
		private System.Nullable<double> _weight;
		
		private string _item_desc;
		
		private System.Nullable<int> _state;
		
		private System.Nullable<int> _reason_code;
		
		private System.Nullable<int> _tax_exempt;
		
		private System.Nullable<int> _tax_incl;
		
		private System.Nullable<double> _var_amount;
		
		public trans_item()
		{
		}
		
		[Column(Storage="_trans_id", DbType="Int NOT NULL")]
		public int trans_id
		{
			get
			{
				return this._trans_id;
			}
			set
			{
				if ((this._trans_id != value))
				{
					this._trans_id = value;
				}
			}
		}
		
		[Column(Storage="_seq_no", DbType="Int")]
		public System.Nullable<int> seq_no
		{
			get
			{
				return this._seq_no;
			}
			set
			{
				if ((this._seq_no != value))
				{
					this._seq_no = value;
				}
			}
		}
		
		[Column(Storage="_sku", DbType="VarChar(20)")]
		public string sku
		{
			get
			{
				return this._sku;
			}
			set
			{
				if ((this._sku != value))
				{
					this._sku = value;
				}
			}
		}
		
		[Column(Storage="_sku_link", DbType="VarChar(20)")]
		public string sku_link
		{
			get
			{
				return this._sku_link;
			}
			set
			{
				if ((this._sku_link != value))
				{
					this._sku_link = value;
				}
			}
		}
		
		[Column(Storage="_quantity", DbType="Float")]
		public System.Nullable<double> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this._quantity = value;
				}
			}
		}
		
		[Column(Storage="_amount", DbType="Float")]
		public System.Nullable<double> amount
		{
			get
			{
				return this._amount;
			}
			set
			{
				if ((this._amount != value))
				{
					this._amount = value;
				}
			}
		}
		
		[Column(Storage="_ext_amount", DbType="Float")]
		public System.Nullable<double> ext_amount
		{
			get
			{
				return this._ext_amount;
			}
			set
			{
				if ((this._ext_amount != value))
				{
					this._ext_amount = value;
				}
			}
		}
		
		[Column(Storage="_weight", DbType="Float")]
		public System.Nullable<double> weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this._weight = value;
				}
			}
		}
		
		[Column(Storage="_item_desc", DbType="VarChar(100)")]
		public string item_desc
		{
			get
			{
				return this._item_desc;
			}
			set
			{
				if ((this._item_desc != value))
				{
					this._item_desc = value;
				}
			}
		}
		
		[Column(Storage="_state", DbType="Int")]
		public System.Nullable<int> state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this._state = value;
				}
			}
		}
		
		[Column(Storage="_reason_code", DbType="Int")]
		public System.Nullable<int> reason_code
		{
			get
			{
				return this._reason_code;
			}
			set
			{
				if ((this._reason_code != value))
				{
					this._reason_code = value;
				}
			}
		}
		
		[Column(Storage="_tax_exempt", DbType="Int")]
		public System.Nullable<int> tax_exempt
		{
			get
			{
				return this._tax_exempt;
			}
			set
			{
				if ((this._tax_exempt != value))
				{
					this._tax_exempt = value;
				}
			}
		}
		
		[Column(Storage="_tax_incl", DbType="Int")]
		public System.Nullable<int> tax_incl
		{
			get
			{
				return this._tax_incl;
			}
			set
			{
				if ((this._tax_incl != value))
				{
					this._tax_incl = value;
				}
			}
		}
		
		[Column(Storage="_var_amount", DbType="Float")]
		public System.Nullable<double> var_amount
		{
			get
			{
				return this._var_amount;
			}
			set
			{
				if ((this._var_amount != value))
				{
					this._var_amount = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.pos_key")]
	public partial class pos_key : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _key_id;
		
		private System.Nullable<int> _config_no;
		
		private int _panel_id;
		
		private string _key_text;
		
		private System.Nullable<int> _key_type;
		
		private System.Nullable<int> _key_val;
		
		private System.Nullable<int> _key_code;
		
		private System.Nullable<int> _device_type;
		
		private int _x_loc;
		
		private int _y_loc;
		
		private System.Nullable<int> _key_height;
		
		private System.Nullable<int> _key_width;
		
		private System.Nullable<int> _fg_color;
		
		private System.Nullable<int> _bg_color;
		
		private System.Nullable<int> _attr;
		
		private string _flags;
		
		private System.Nullable<int> _logout_disable;
		
		private string _key_class;
		
		private string _param;
		
		private string _image;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onkey_idChanging(int value);
    partial void Onkey_idChanged();
    partial void Onconfig_noChanging(System.Nullable<int> value);
    partial void Onconfig_noChanged();
    partial void Onpanel_idChanging(int value);
    partial void Onpanel_idChanged();
    partial void Onkey_textChanging(string value);
    partial void Onkey_textChanged();
    partial void Onkey_typeChanging(System.Nullable<int> value);
    partial void Onkey_typeChanged();
    partial void Onkey_valChanging(System.Nullable<int> value);
    partial void Onkey_valChanged();
    partial void Onkey_codeChanging(System.Nullable<int> value);
    partial void Onkey_codeChanged();
    partial void Ondevice_typeChanging(System.Nullable<int> value);
    partial void Ondevice_typeChanged();
    partial void Onx_locChanging(int value);
    partial void Onx_locChanged();
    partial void Ony_locChanging(int value);
    partial void Ony_locChanged();
    partial void Onkey_heightChanging(System.Nullable<int> value);
    partial void Onkey_heightChanged();
    partial void Onkey_widthChanging(System.Nullable<int> value);
    partial void Onkey_widthChanged();
    partial void Onfg_colorChanging(System.Nullable<int> value);
    partial void Onfg_colorChanged();
    partial void Onbg_colorChanging(System.Nullable<int> value);
    partial void Onbg_colorChanged();
    partial void OnattrChanging(System.Nullable<int> value);
    partial void OnattrChanged();
    partial void OnflagsChanging(string value);
    partial void OnflagsChanged();
    partial void Onlogout_disableChanging(System.Nullable<int> value);
    partial void Onlogout_disableChanged();
    partial void Onkey_classChanging(string value);
    partial void Onkey_classChanged();
    partial void OnparamChanging(string value);
    partial void OnparamChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    #endregion
		
		public pos_key()
		{
			OnCreated();
		}
		
		[Column(Storage="_key_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int key_id
		{
			get
			{
				return this._key_id;
			}
			set
			{
				if ((this._key_id != value))
				{
					this.Onkey_idChanging(value);
					this.SendPropertyChanging();
					this._key_id = value;
					this.SendPropertyChanged("key_id");
					this.Onkey_idChanged();
				}
			}
		}
		
		[Column(Storage="_config_no", DbType="Int")]
		public System.Nullable<int> config_no
		{
			get
			{
				return this._config_no;
			}
			set
			{
				if ((this._config_no != value))
				{
					this.Onconfig_noChanging(value);
					this.SendPropertyChanging();
					this._config_no = value;
					this.SendPropertyChanged("config_no");
					this.Onconfig_noChanged();
				}
			}
		}
		
		[Column(Storage="_panel_id", DbType="Int NOT NULL")]
		public int panel_id
		{
			get
			{
				return this._panel_id;
			}
			set
			{
				if ((this._panel_id != value))
				{
					this.Onpanel_idChanging(value);
					this.SendPropertyChanging();
					this._panel_id = value;
					this.SendPropertyChanged("panel_id");
					this.Onpanel_idChanged();
				}
			}
		}
		
		[Column(Storage="_key_text", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string key_text
		{
			get
			{
				return this._key_text;
			}
			set
			{
				if ((this._key_text != value))
				{
					this.Onkey_textChanging(value);
					this.SendPropertyChanging();
					this._key_text = value;
					this.SendPropertyChanged("key_text");
					this.Onkey_textChanged();
				}
			}
		}
		
		[Column(Storage="_key_type", DbType="Int")]
		public System.Nullable<int> key_type
		{
			get
			{
				return this._key_type;
			}
			set
			{
				if ((this._key_type != value))
				{
					this.Onkey_typeChanging(value);
					this.SendPropertyChanging();
					this._key_type = value;
					this.SendPropertyChanged("key_type");
					this.Onkey_typeChanged();
				}
			}
		}
		
		[Column(Storage="_key_val", DbType="Int")]
		public System.Nullable<int> key_val
		{
			get
			{
				return this._key_val;
			}
			set
			{
				if ((this._key_val != value))
				{
					this.Onkey_valChanging(value);
					this.SendPropertyChanging();
					this._key_val = value;
					this.SendPropertyChanged("key_val");
					this.Onkey_valChanged();
				}
			}
		}
		
		[Column(Storage="_key_code", DbType="Int")]
		public System.Nullable<int> key_code
		{
			get
			{
				return this._key_code;
			}
			set
			{
				if ((this._key_code != value))
				{
					this.Onkey_codeChanging(value);
					this.SendPropertyChanging();
					this._key_code = value;
					this.SendPropertyChanged("key_code");
					this.Onkey_codeChanged();
				}
			}
		}
		
		[Column(Storage="_device_type", DbType="Int")]
		public System.Nullable<int> device_type
		{
			get
			{
				return this._device_type;
			}
			set
			{
				if ((this._device_type != value))
				{
					this.Ondevice_typeChanging(value);
					this.SendPropertyChanging();
					this._device_type = value;
					this.SendPropertyChanged("device_type");
					this.Ondevice_typeChanged();
				}
			}
		}
		
		[Column(Storage="_x_loc", DbType="Int NOT NULL")]
		public int x_loc
		{
			get
			{
				return this._x_loc;
			}
			set
			{
				if ((this._x_loc != value))
				{
					this.Onx_locChanging(value);
					this.SendPropertyChanging();
					this._x_loc = value;
					this.SendPropertyChanged("x_loc");
					this.Onx_locChanged();
				}
			}
		}
		
		[Column(Storage="_y_loc", DbType="Int NOT NULL")]
		public int y_loc
		{
			get
			{
				return this._y_loc;
			}
			set
			{
				if ((this._y_loc != value))
				{
					this.Ony_locChanging(value);
					this.SendPropertyChanging();
					this._y_loc = value;
					this.SendPropertyChanged("y_loc");
					this.Ony_locChanged();
				}
			}
		}
		
		[Column(Storage="_key_height", DbType="Int")]
		public System.Nullable<int> key_height
		{
			get
			{
				return this._key_height;
			}
			set
			{
				if ((this._key_height != value))
				{
					this.Onkey_heightChanging(value);
					this.SendPropertyChanging();
					this._key_height = value;
					this.SendPropertyChanged("key_height");
					this.Onkey_heightChanged();
				}
			}
		}
		
		[Column(Storage="_key_width", DbType="Int")]
		public System.Nullable<int> key_width
		{
			get
			{
				return this._key_width;
			}
			set
			{
				if ((this._key_width != value))
				{
					this.Onkey_widthChanging(value);
					this.SendPropertyChanging();
					this._key_width = value;
					this.SendPropertyChanged("key_width");
					this.Onkey_widthChanged();
				}
			}
		}
		
		[Column(Storage="_fg_color", DbType="Int")]
		public System.Nullable<int> fg_color
		{
			get
			{
				return this._fg_color;
			}
			set
			{
				if ((this._fg_color != value))
				{
					this.Onfg_colorChanging(value);
					this.SendPropertyChanging();
					this._fg_color = value;
					this.SendPropertyChanged("fg_color");
					this.Onfg_colorChanged();
				}
			}
		}
		
		[Column(Storage="_bg_color", DbType="Int")]
		public System.Nullable<int> bg_color
		{
			get
			{
				return this._bg_color;
			}
			set
			{
				if ((this._bg_color != value))
				{
					this.Onbg_colorChanging(value);
					this.SendPropertyChanging();
					this._bg_color = value;
					this.SendPropertyChanged("bg_color");
					this.Onbg_colorChanged();
				}
			}
		}
		
		[Column(Storage="_attr", DbType="Int")]
		public System.Nullable<int> attr
		{
			get
			{
				return this._attr;
			}
			set
			{
				if ((this._attr != value))
				{
					this.OnattrChanging(value);
					this.SendPropertyChanging();
					this._attr = value;
					this.SendPropertyChanged("attr");
					this.OnattrChanged();
				}
			}
		}
		
		[Column(Storage="_flags", DbType="VarChar(100)")]
		public string flags
		{
			get
			{
				return this._flags;
			}
			set
			{
				if ((this._flags != value))
				{
					this.OnflagsChanging(value);
					this.SendPropertyChanging();
					this._flags = value;
					this.SendPropertyChanged("flags");
					this.OnflagsChanged();
				}
			}
		}
		
		[Column(Storage="_logout_disable", DbType="Int")]
		public System.Nullable<int> logout_disable
		{
			get
			{
				return this._logout_disable;
			}
			set
			{
				if ((this._logout_disable != value))
				{
					this.Onlogout_disableChanging(value);
					this.SendPropertyChanging();
					this._logout_disable = value;
					this.SendPropertyChanged("logout_disable");
					this.Onlogout_disableChanged();
				}
			}
		}
		
		[Column(Storage="_key_class", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string key_class
		{
			get
			{
				return this._key_class;
			}
			set
			{
				if ((this._key_class != value))
				{
					this.Onkey_classChanging(value);
					this.SendPropertyChanging();
					this._key_class = value;
					this.SendPropertyChanged("key_class");
					this.Onkey_classChanged();
				}
			}
		}
		
		[Column(Storage="_param", DbType="VarChar(100)")]
		public string param
		{
			get
			{
				return this._param;
			}
			set
			{
				if ((this._param != value))
				{
					this.OnparamChanging(value);
					this.SendPropertyChanging();
					this._param = value;
					this.SendPropertyChanged("param");
					this.OnparamChanged();
				}
			}
		}
		
		[Column(Storage="_image", DbType="VarChar(100)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.organization")]
	public partial class organization : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _organization_no;
		
		private string _organization_name;
		
		private string _federal_tax_id;
		
		private string _legal_status_code;
		
		private string _state_tax_id;
		
		private string _tax_id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onorganization_noChanging(int value);
    partial void Onorganization_noChanged();
    partial void Onorganization_nameChanging(string value);
    partial void Onorganization_nameChanged();
    partial void Onfederal_tax_idChanging(string value);
    partial void Onfederal_tax_idChanged();
    partial void Onlegal_status_codeChanging(string value);
    partial void Onlegal_status_codeChanged();
    partial void Onstate_tax_idChanging(string value);
    partial void Onstate_tax_idChanged();
    partial void Ontax_idChanging(string value);
    partial void Ontax_idChanged();
    #endregion
		
		public organization()
		{
			OnCreated();
		}
		
		[Column(Storage="_organization_no", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int organization_no
		{
			get
			{
				return this._organization_no;
			}
			set
			{
				if ((this._organization_no != value))
				{
					this.Onorganization_noChanging(value);
					this.SendPropertyChanging();
					this._organization_no = value;
					this.SendPropertyChanged("organization_no");
					this.Onorganization_noChanged();
				}
			}
		}
		
		[Column(Storage="_organization_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string organization_name
		{
			get
			{
				return this._organization_name;
			}
			set
			{
				if ((this._organization_name != value))
				{
					this.Onorganization_nameChanging(value);
					this.SendPropertyChanging();
					this._organization_name = value;
					this.SendPropertyChanged("organization_name");
					this.Onorganization_nameChanged();
				}
			}
		}
		
		[Column(Storage="_federal_tax_id", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string federal_tax_id
		{
			get
			{
				return this._federal_tax_id;
			}
			set
			{
				if ((this._federal_tax_id != value))
				{
					this.Onfederal_tax_idChanging(value);
					this.SendPropertyChanging();
					this._federal_tax_id = value;
					this.SendPropertyChanged("federal_tax_id");
					this.Onfederal_tax_idChanged();
				}
			}
		}
		
		[Column(Storage="_legal_status_code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string legal_status_code
		{
			get
			{
				return this._legal_status_code;
			}
			set
			{
				if ((this._legal_status_code != value))
				{
					this.Onlegal_status_codeChanging(value);
					this.SendPropertyChanging();
					this._legal_status_code = value;
					this.SendPropertyChanged("legal_status_code");
					this.Onlegal_status_codeChanged();
				}
			}
		}
		
		[Column(Storage="_state_tax_id", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string state_tax_id
		{
			get
			{
				return this._state_tax_id;
			}
			set
			{
				if ((this._state_tax_id != value))
				{
					this.Onstate_tax_idChanging(value);
					this.SendPropertyChanging();
					this._state_tax_id = value;
					this.SendPropertyChanged("state_tax_id");
					this.Onstate_tax_idChanged();
				}
			}
		}
		
		[Column(Storage="_tax_id", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string tax_id
		{
			get
			{
				return this._tax_id;
			}
			set
			{
				if ((this._tax_id != value))
				{
					this.Ontax_idChanging(value);
					this.SendPropertyChanging();
					this._tax_id = value;
					this.SendPropertyChanged("tax_id");
					this.Ontax_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.pos_param")]
	public partial class pos_param : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _config_no;
		
		private System.Nullable<int> _param_type;
		
		private System.Nullable<int> _param_catogory;
		
		private System.Nullable<int> _help_id;
		
		private string _param_name;
		
		private string _param_value;
		
		private string _Remarks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onconfig_noChanging(int value);
    partial void Onconfig_noChanged();
    partial void Onparam_typeChanging(System.Nullable<int> value);
    partial void Onparam_typeChanged();
    partial void Onparam_catogoryChanging(System.Nullable<int> value);
    partial void Onparam_catogoryChanged();
    partial void Onhelp_idChanging(System.Nullable<int> value);
    partial void Onhelp_idChanged();
    partial void Onparam_nameChanging(string value);
    partial void Onparam_nameChanged();
    partial void Onparam_valueChanging(string value);
    partial void Onparam_valueChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    #endregion
		
		public pos_param()
		{
			OnCreated();
		}
		
		[Column(Storage="_config_no", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int config_no
		{
			get
			{
				return this._config_no;
			}
			set
			{
				if ((this._config_no != value))
				{
					this.Onconfig_noChanging(value);
					this.SendPropertyChanging();
					this._config_no = value;
					this.SendPropertyChanged("config_no");
					this.Onconfig_noChanged();
				}
			}
		}
		
		[Column(Storage="_param_type", DbType="Int")]
		public System.Nullable<int> param_type
		{
			get
			{
				return this._param_type;
			}
			set
			{
				if ((this._param_type != value))
				{
					this.Onparam_typeChanging(value);
					this.SendPropertyChanging();
					this._param_type = value;
					this.SendPropertyChanged("param_type");
					this.Onparam_typeChanged();
				}
			}
		}
		
		[Column(Storage="_param_catogory", DbType="Int")]
		public System.Nullable<int> param_catogory
		{
			get
			{
				return this._param_catogory;
			}
			set
			{
				if ((this._param_catogory != value))
				{
					this.Onparam_catogoryChanging(value);
					this.SendPropertyChanging();
					this._param_catogory = value;
					this.SendPropertyChanged("param_catogory");
					this.Onparam_catogoryChanged();
				}
			}
		}
		
		[Column(Storage="_help_id", DbType="Int")]
		public System.Nullable<int> help_id
		{
			get
			{
				return this._help_id;
			}
			set
			{
				if ((this._help_id != value))
				{
					this.Onhelp_idChanging(value);
					this.SendPropertyChanging();
					this._help_id = value;
					this.SendPropertyChanged("help_id");
					this.Onhelp_idChanged();
				}
			}
		}
		
		[Column(Storage="_param_name", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string param_name
		{
			get
			{
				return this._param_name;
			}
			set
			{
				if ((this._param_name != value))
				{
					this.Onparam_nameChanging(value);
					this.SendPropertyChanging();
					this._param_name = value;
					this.SendPropertyChanged("param_name");
					this.Onparam_nameChanged();
				}
			}
		}
		
		[Column(Storage="_param_value", DbType="VarChar(100)")]
		public string param_value
		{
			get
			{
				return this._param_value;
			}
			set
			{
				if ((this._param_value != value))
				{
					this.Onparam_valueChanging(value);
					this.SendPropertyChanging();
					this._param_value = value;
					this.SendPropertyChanged("param_value");
					this.Onparam_valueChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="VarChar(100)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
